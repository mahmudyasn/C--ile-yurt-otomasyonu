#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:4.0.30319.42000
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VeriSorgulari
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OgrYurt")]
	public partial class YurtDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertVeli(Veli instance);
    partial void UpdateVeli(Veli instance);
    partial void DeleteVeli(Veli instance);
    partial void InsertOda(Oda instance);
    partial void UpdateOda(Oda instance);
    partial void DeleteOda(Oda instance);
    partial void InsertOdeme(Odeme instance);
    partial void UpdateOdeme(Odeme instance);
    partial void DeleteOdeme(Odeme instance);
    partial void InsertOgrenci(Ogrenci instance);
    partial void UpdateOgrenci(Ogrenci instance);
    partial void DeleteOgrenci(Ogrenci instance);
    partial void InsertPersonel(Personel instance);
    partial void UpdatePersonel(Personel instance);
    partial void DeletePersonel(Personel instance);
    partial void InsertUcret(Ucret instance);
    partial void UpdateUcret(Ucret instance);
    partial void DeleteUcret(Ucret instance);
    #endregion
		
		public YurtDataContext() : 
				base(global::VeriSorgulari.Properties.Settings.Default.OgrYurtConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public YurtDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YurtDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YurtDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YurtDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<Veli> Velis
		{
			get
			{
				return this.GetTable<Veli>();
			}
		}
		
		public System.Data.Linq.Table<Oda> Odas
		{
			get
			{
				return this.GetTable<Oda>();
			}
		}
		
		public System.Data.Linq.Table<Odeme> Odemes
		{
			get
			{
				return this.GetTable<Odeme>();
			}
		}
		
		public System.Data.Linq.Table<Ogrenci> Ogrencis
		{
			get
			{
				return this.GetTable<Ogrenci>();
			}
		}
		
		public System.Data.Linq.Table<Personel> Personels
		{
			get
			{
				return this.GetTable<Personel>();
			}
		}
		
		public System.Data.Linq.Table<Ucret> Ucrets
		{
			get
			{
				return this.GetTable<Ucret>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LogIcerik;
		
		private System.Nullable<int> _PersonelID;
		
		private System.Nullable<System.DateTime> _IslemTarihi;
		
		private EntityRef<Personel> _Personel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLogIcerikChanging(string value);
    partial void OnLogIcerikChanged();
    partial void OnPersonelIDChanging(System.Nullable<int> value);
    partial void OnPersonelIDChanged();
    partial void OnIslemTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnIslemTarihiChanged();
    #endregion
		
		public Log()
		{
			this._Personel = default(EntityRef<Personel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogIcerik", DbType="NVarChar(MAX)")]
		public string LogIcerik
		{
			get
			{
				return this._LogIcerik;
			}
			set
			{
				if ((this._LogIcerik != value))
				{
					this.OnLogIcerikChanging(value);
					this.SendPropertyChanging();
					this._LogIcerik = value;
					this.SendPropertyChanged("LogIcerik");
					this.OnLogIcerikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", DbType="Int")]
		public System.Nullable<int> PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IslemTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> IslemTarihi
		{
			get
			{
				return this._IslemTarihi;
			}
			set
			{
				if ((this._IslemTarihi != value))
				{
					this.OnIslemTarihiChanging(value);
					this.SendPropertyChanging();
					this._IslemTarihi = value;
					this.SendPropertyChanged("IslemTarihi");
					this.OnIslemTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Log", Storage="_Personel", ThisKey="PersonelID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Logs.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Logs.Add(this);
						this._PersonelID = value.Id;
					}
					else
					{
						this._PersonelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Veli")]
	public partial class Veli : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ad;
		
		private string _Soyad;
		
		private string _YakinlikDerecesi;
		
		private string _Telefon;
		
		private int _OgrenciID;
		
		private EntityRef<Ogrenci> _Ogrenci;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdChanging(string value);
    partial void OnAdChanged();
    partial void OnSoyadChanging(string value);
    partial void OnSoyadChanged();
    partial void OnYakinlikDerecesiChanging(string value);
    partial void OnYakinlikDerecesiChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnOgrenciIDChanging(int value);
    partial void OnOgrenciIDChanged();
    #endregion
		
		public Veli()
		{
			this._Ogrenci = default(EntityRef<Ogrenci>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ad
		{
			get
			{
				return this._Ad;
			}
			set
			{
				if ((this._Ad != value))
				{
					this.OnAdChanging(value);
					this.SendPropertyChanging();
					this._Ad = value;
					this.SendPropertyChanged("Ad");
					this.OnAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soyad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Soyad
		{
			get
			{
				return this._Soyad;
			}
			set
			{
				if ((this._Soyad != value))
				{
					this.OnSoyadChanging(value);
					this.SendPropertyChanging();
					this._Soyad = value;
					this.SendPropertyChanged("Soyad");
					this.OnSoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YakinlikDerecesi", DbType="NVarChar(50)")]
		public string YakinlikDerecesi
		{
			get
			{
				return this._YakinlikDerecesi;
			}
			set
			{
				if ((this._YakinlikDerecesi != value))
				{
					this.OnYakinlikDerecesiChanging(value);
					this.SendPropertyChanging();
					this._YakinlikDerecesi = value;
					this.SendPropertyChanged("YakinlikDerecesi");
					this.OnYakinlikDerecesiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgrenciID", DbType="Int NOT NULL")]
		public int OgrenciID
		{
			get
			{
				return this._OgrenciID;
			}
			set
			{
				if ((this._OgrenciID != value))
				{
					if (this._Ogrenci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOgrenciIDChanging(value);
					this.SendPropertyChanging();
					this._OgrenciID = value;
					this.SendPropertyChanged("OgrenciID");
					this.OnOgrenciIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ogrenci_Veli", Storage="_Ogrenci", ThisKey="OgrenciID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Ogrenci Ogrenci
		{
			get
			{
				return this._Ogrenci.Entity;
			}
			set
			{
				Ogrenci previousValue = this._Ogrenci.Entity;
				if (((previousValue != value) 
							|| (this._Ogrenci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ogrenci.Entity = null;
						previousValue.Velis.Remove(this);
					}
					this._Ogrenci.Entity = value;
					if ((value != null))
					{
						value.Velis.Add(this);
						this._OgrenciID = value.Id;
					}
					else
					{
						this._OgrenciID = default(int);
					}
					this.SendPropertyChanged("Ogrenci");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Oda")]
	public partial class Oda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _OdaNo;
		
		private int _KisiSayisi;
		
		private bool _Durum;
		
		private EntitySet<Ogrenci> _Ogrencis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOdaNoChanging(string value);
    partial void OnOdaNoChanged();
    partial void OnKisiSayisiChanging(int value);
    partial void OnKisiSayisiChanged();
    partial void OnDurumChanging(bool value);
    partial void OnDurumChanged();
    #endregion
		
		public Oda()
		{
			this._Ogrencis = new EntitySet<Ogrenci>(new Action<Ogrenci>(this.attach_Ogrencis), new Action<Ogrenci>(this.detach_Ogrencis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdaNo", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string OdaNo
		{
			get
			{
				return this._OdaNo;
			}
			set
			{
				if ((this._OdaNo != value))
				{
					this.OnOdaNoChanging(value);
					this.SendPropertyChanging();
					this._OdaNo = value;
					this.SendPropertyChanged("OdaNo");
					this.OnOdaNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KisiSayisi", DbType="Int NOT NULL")]
		public int KisiSayisi
		{
			get
			{
				return this._KisiSayisi;
			}
			set
			{
				if ((this._KisiSayisi != value))
				{
					this.OnKisiSayisiChanging(value);
					this.SendPropertyChanging();
					this._KisiSayisi = value;
					this.SendPropertyChanged("KisiSayisi");
					this.OnKisiSayisiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durum", DbType="Bit NOT NULL")]
		public bool Durum
		{
			get
			{
				return this._Durum;
			}
			set
			{
				if ((this._Durum != value))
				{
					this.OnDurumChanging(value);
					this.SendPropertyChanging();
					this._Durum = value;
					this.SendPropertyChanged("Durum");
					this.OnDurumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Oda_Ogrenci", Storage="_Ogrencis", ThisKey="Id", OtherKey="OdaID")]
		public EntitySet<Ogrenci> Ogrencis
		{
			get
			{
				return this._Ogrencis;
			}
			set
			{
				this._Ogrencis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ogrencis(Ogrenci entity)
		{
			this.SendPropertyChanging();
			entity.Oda = this;
		}
		
		private void detach_Ogrencis(Ogrenci entity)
		{
			this.SendPropertyChanging();
			entity.Oda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Odeme")]
	public partial class Odeme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private double _OdemeTutari;
		
		private System.DateTime _IslemTarihi;
		
		private int _PersonelID;
		
		private int _UcretID;
		
		private EntityRef<Personel> _Personel;
		
		private EntityRef<Ucret> _Ucret;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOdemeTutariChanging(double value);
    partial void OnOdemeTutariChanged();
    partial void OnIslemTarihiChanging(System.DateTime value);
    partial void OnIslemTarihiChanged();
    partial void OnPersonelIDChanging(int value);
    partial void OnPersonelIDChanged();
    partial void OnUcretIDChanging(int value);
    partial void OnUcretIDChanged();
    #endregion
		
		public Odeme()
		{
			this._Personel = default(EntityRef<Personel>);
			this._Ucret = default(EntityRef<Ucret>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdemeTutari", DbType="Float NOT NULL")]
		public double OdemeTutari
		{
			get
			{
				return this._OdemeTutari;
			}
			set
			{
				if ((this._OdemeTutari != value))
				{
					this.OnOdemeTutariChanging(value);
					this.SendPropertyChanging();
					this._OdemeTutari = value;
					this.SendPropertyChanged("OdemeTutari");
					this.OnOdemeTutariChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IslemTarihi", DbType="DateTime NOT NULL")]
		public System.DateTime IslemTarihi
		{
			get
			{
				return this._IslemTarihi;
			}
			set
			{
				if ((this._IslemTarihi != value))
				{
					this.OnIslemTarihiChanging(value);
					this.SendPropertyChanging();
					this._IslemTarihi = value;
					this.SendPropertyChanged("IslemTarihi");
					this.OnIslemTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", DbType="Int NOT NULL")]
		public int PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UcretID", DbType="Int NOT NULL")]
		public int UcretID
		{
			get
			{
				return this._UcretID;
			}
			set
			{
				if ((this._UcretID != value))
				{
					if (this._Ucret.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUcretIDChanging(value);
					this.SendPropertyChanging();
					this._UcretID = value;
					this.SendPropertyChanged("UcretID");
					this.OnUcretIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Odeme", Storage="_Personel", ThisKey="PersonelID", OtherKey="Id", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Odemes.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Odemes.Add(this);
						this._PersonelID = value.Id;
					}
					else
					{
						this._PersonelID = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ucret_Odeme", Storage="_Ucret", ThisKey="UcretID", OtherKey="Id", IsForeignKey=true)]
		public Ucret Ucret
		{
			get
			{
				return this._Ucret.Entity;
			}
			set
			{
				Ucret previousValue = this._Ucret.Entity;
				if (((previousValue != value) 
							|| (this._Ucret.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ucret.Entity = null;
						previousValue.Odemes.Remove(this);
					}
					this._Ucret.Entity = value;
					if ((value != null))
					{
						value.Odemes.Add(this);
						this._UcretID = value.Id;
					}
					else
					{
						this._UcretID = default(int);
					}
					this.SendPropertyChanged("Ucret");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ogrenci")]
	public partial class Ogrenci : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OdaID;
		
		private string _Ad;
		
		private string _Soyad;
		
		private string _TC;
		
		private string _Telefon;
		
		private System.Data.Linq.Binary _Resim;
		
		private System.DateTime _KayitTarihi;
		
		private string _OgrenciNo;
		
		private int _OgrSinif;
		
		private bool _Durum;
		
		private EntitySet<Veli> _Velis;
		
		private EntitySet<Ucret> _Ucrets;
		
		private EntityRef<Oda> _Oda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOdaIDChanging(int value);
    partial void OnOdaIDChanged();
    partial void OnAdChanging(string value);
    partial void OnAdChanged();
    partial void OnSoyadChanging(string value);
    partial void OnSoyadChanged();
    partial void OnTCChanging(string value);
    partial void OnTCChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnResimChanging(System.Data.Linq.Binary value);
    partial void OnResimChanged();
    partial void OnKayitTarihiChanging(System.DateTime value);
    partial void OnKayitTarihiChanged();
    partial void OnOgrenciNoChanging(string value);
    partial void OnOgrenciNoChanged();
    partial void OnOgrSinifChanging(int value);
    partial void OnOgrSinifChanged();
    partial void OnDurumChanging(bool value);
    partial void OnDurumChanged();
    #endregion
		
		public Ogrenci()
		{
			this._Velis = new EntitySet<Veli>(new Action<Veli>(this.attach_Velis), new Action<Veli>(this.detach_Velis));
			this._Ucrets = new EntitySet<Ucret>(new Action<Ucret>(this.attach_Ucrets), new Action<Ucret>(this.detach_Ucrets));
			this._Oda = default(EntityRef<Oda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdaID", DbType="Int NOT NULL")]
		public int OdaID
		{
			get
			{
				return this._OdaID;
			}
			set
			{
				if ((this._OdaID != value))
				{
					if (this._Oda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOdaIDChanging(value);
					this.SendPropertyChanging();
					this._OdaID = value;
					this.SendPropertyChanged("OdaID");
					this.OnOdaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ad", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Ad
		{
			get
			{
				return this._Ad;
			}
			set
			{
				if ((this._Ad != value))
				{
					this.OnAdChanging(value);
					this.SendPropertyChanging();
					this._Ad = value;
					this.SendPropertyChanged("Ad");
					this.OnAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soyad", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Soyad
		{
			get
			{
				return this._Soyad;
			}
			set
			{
				if ((this._Soyad != value))
				{
					this.OnSoyadChanging(value);
					this.SendPropertyChanging();
					this._Soyad = value;
					this.SendPropertyChanged("Soyad");
					this.OnSoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TC", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string TC
		{
			get
			{
				return this._TC;
			}
			set
			{
				if ((this._TC != value))
				{
					this.OnTCChanging(value);
					this.SendPropertyChanging();
					this._TC = value;
					this.SendPropertyChanged("TC");
					this.OnTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NChar(11)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resim", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Resim
		{
			get
			{
				return this._Resim;
			}
			set
			{
				if ((this._Resim != value))
				{
					this.OnResimChanging(value);
					this.SendPropertyChanging();
					this._Resim = value;
					this.SendPropertyChanged("Resim");
					this.OnResimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KayitTarihi", DbType="DateTime NOT NULL")]
		public System.DateTime KayitTarihi
		{
			get
			{
				return this._KayitTarihi;
			}
			set
			{
				if ((this._KayitTarihi != value))
				{
					this.OnKayitTarihiChanging(value);
					this.SendPropertyChanging();
					this._KayitTarihi = value;
					this.SendPropertyChanged("KayitTarihi");
					this.OnKayitTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgrenciNo", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string OgrenciNo
		{
			get
			{
				return this._OgrenciNo;
			}
			set
			{
				if ((this._OgrenciNo != value))
				{
					this.OnOgrenciNoChanging(value);
					this.SendPropertyChanging();
					this._OgrenciNo = value;
					this.SendPropertyChanged("OgrenciNo");
					this.OnOgrenciNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgrSinif", DbType="Int NOT NULL")]
		public int OgrSinif
		{
			get
			{
				return this._OgrSinif;
			}
			set
			{
				if ((this._OgrSinif != value))
				{
					this.OnOgrSinifChanging(value);
					this.SendPropertyChanging();
					this._OgrSinif = value;
					this.SendPropertyChanged("OgrSinif");
					this.OnOgrSinifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durum", DbType="Bit NOT NULL")]
		public bool Durum
		{
			get
			{
				return this._Durum;
			}
			set
			{
				if ((this._Durum != value))
				{
					this.OnDurumChanging(value);
					this.SendPropertyChanging();
					this._Durum = value;
					this.SendPropertyChanged("Durum");
					this.OnDurumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ogrenci_Veli", Storage="_Velis", ThisKey="Id", OtherKey="OgrenciID")]
		public EntitySet<Veli> Velis
		{
			get
			{
				return this._Velis;
			}
			set
			{
				this._Velis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ogrenci_Ucret", Storage="_Ucrets", ThisKey="Id", OtherKey="OgrenciID")]
		public EntitySet<Ucret> Ucrets
		{
			get
			{
				return this._Ucrets;
			}
			set
			{
				this._Ucrets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Oda_Ogrenci", Storage="_Oda", ThisKey="OdaID", OtherKey="Id", IsForeignKey=true)]
		public Oda Oda
		{
			get
			{
				return this._Oda.Entity;
			}
			set
			{
				Oda previousValue = this._Oda.Entity;
				if (((previousValue != value) 
							|| (this._Oda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Oda.Entity = null;
						previousValue.Ogrencis.Remove(this);
					}
					this._Oda.Entity = value;
					if ((value != null))
					{
						value.Ogrencis.Add(this);
						this._OdaID = value.Id;
					}
					else
					{
						this._OdaID = default(int);
					}
					this.SendPropertyChanged("Oda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Ogrenci = this;
		}
		
		private void detach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Ogrenci = null;
		}
		
		private void attach_Ucrets(Ucret entity)
		{
			this.SendPropertyChanging();
			entity.Ogrenci = this;
		}
		
		private void detach_Ucrets(Ucret entity)
		{
			this.SendPropertyChanging();
			entity.Ogrenci = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personel")]
	public partial class Personel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ad;
		
		private string _Soyad;
		
		private string _Telefon;
		
		private string _KullaniciAdi;
		
		private string _Sifre;
		
		private System.DateTime _KayitTarihi;
		
		private bool _Durum;
		
		private EntitySet<Log> _Logs;
		
		private EntitySet<Odeme> _Odemes;
		
		private EntitySet<Ucret> _Ucrets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdChanging(string value);
    partial void OnAdChanged();
    partial void OnSoyadChanging(string value);
    partial void OnSoyadChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnKullaniciAdiChanging(string value);
    partial void OnKullaniciAdiChanged();
    partial void OnSifreChanging(string value);
    partial void OnSifreChanged();
    partial void OnKayitTarihiChanging(System.DateTime value);
    partial void OnKayitTarihiChanged();
    partial void OnDurumChanging(bool value);
    partial void OnDurumChanged();
    #endregion
		
		public Personel()
		{
			this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
			this._Odemes = new EntitySet<Odeme>(new Action<Odeme>(this.attach_Odemes), new Action<Odeme>(this.detach_Odemes));
			this._Ucrets = new EntitySet<Ucret>(new Action<Ucret>(this.attach_Ucrets), new Action<Ucret>(this.detach_Ucrets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ad
		{
			get
			{
				return this._Ad;
			}
			set
			{
				if ((this._Ad != value))
				{
					this.OnAdChanging(value);
					this.SendPropertyChanging();
					this._Ad = value;
					this.SendPropertyChanged("Ad");
					this.OnAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soyad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Soyad
		{
			get
			{
				return this._Soyad;
			}
			set
			{
				if ((this._Soyad != value))
				{
					this.OnSoyadChanging(value);
					this.SendPropertyChanging();
					this._Soyad = value;
					this.SendPropertyChanged("Soyad");
					this.OnSoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(11)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KullaniciAdi", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string KullaniciAdi
		{
			get
			{
				return this._KullaniciAdi;
			}
			set
			{
				if ((this._KullaniciAdi != value))
				{
					this.OnKullaniciAdiChanging(value);
					this.SendPropertyChanging();
					this._KullaniciAdi = value;
					this.SendPropertyChanged("KullaniciAdi");
					this.OnKullaniciAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sifre", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Sifre
		{
			get
			{
				return this._Sifre;
			}
			set
			{
				if ((this._Sifre != value))
				{
					this.OnSifreChanging(value);
					this.SendPropertyChanging();
					this._Sifre = value;
					this.SendPropertyChanged("Sifre");
					this.OnSifreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KayitTarihi", DbType="DateTime NOT NULL")]
		public System.DateTime KayitTarihi
		{
			get
			{
				return this._KayitTarihi;
			}
			set
			{
				if ((this._KayitTarihi != value))
				{
					this.OnKayitTarihiChanging(value);
					this.SendPropertyChanging();
					this._KayitTarihi = value;
					this.SendPropertyChanged("KayitTarihi");
					this.OnKayitTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durum", DbType="Bit NOT NULL")]
		public bool Durum
		{
			get
			{
				return this._Durum;
			}
			set
			{
				if ((this._Durum != value))
				{
					this.OnDurumChanging(value);
					this.SendPropertyChanging();
					this._Durum = value;
					this.SendPropertyChanged("Durum");
					this.OnDurumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Log", Storage="_Logs", ThisKey="Id", OtherKey="PersonelID")]
		public EntitySet<Log> Logs
		{
			get
			{
				return this._Logs;
			}
			set
			{
				this._Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Odeme", Storage="_Odemes", ThisKey="Id", OtherKey="PersonelID")]
		public EntitySet<Odeme> Odemes
		{
			get
			{
				return this._Odemes;
			}
			set
			{
				this._Odemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Ucret", Storage="_Ucrets", ThisKey="Id", OtherKey="PersonelID")]
		public EntitySet<Ucret> Ucrets
		{
			get
			{
				return this._Ucrets;
			}
			set
			{
				this._Ucrets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
		
		private void attach_Odemes(Odeme entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Odemes(Odeme entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
		
		private void attach_Ucrets(Ucret entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Ucrets(Ucret entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ucret")]
	public partial class Ucret : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OgrenciID;
		
		private System.DateTime _KayitBaslangicTarihi;
		
		private short _TaksitSayisi;
		
		private System.DateTime _KayitBitisTarihi;
		
		private int _PersonelID;
		
		private int _Yil;
		
		private double _ToplamUcret;
		
		private EntitySet<Odeme> _Odemes;
		
		private EntityRef<Ogrenci> _Ogrenci;
		
		private EntityRef<Personel> _Personel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOgrenciIDChanging(int value);
    partial void OnOgrenciIDChanged();
    partial void OnKayitBaslangicTarihiChanging(System.DateTime value);
    partial void OnKayitBaslangicTarihiChanged();
    partial void OnTaksitSayisiChanging(short value);
    partial void OnTaksitSayisiChanged();
    partial void OnKayitBitisTarihiChanging(System.DateTime value);
    partial void OnKayitBitisTarihiChanged();
    partial void OnPersonelIDChanging(int value);
    partial void OnPersonelIDChanged();
    partial void OnYilChanging(int value);
    partial void OnYilChanged();
    partial void OnToplamUcretChanging(double value);
    partial void OnToplamUcretChanged();
    #endregion
		
		public Ucret()
		{
			this._Odemes = new EntitySet<Odeme>(new Action<Odeme>(this.attach_Odemes), new Action<Odeme>(this.detach_Odemes));
			this._Ogrenci = default(EntityRef<Ogrenci>);
			this._Personel = default(EntityRef<Personel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OgrenciID", DbType="Int NOT NULL")]
		public int OgrenciID
		{
			get
			{
				return this._OgrenciID;
			}
			set
			{
				if ((this._OgrenciID != value))
				{
					if (this._Ogrenci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOgrenciIDChanging(value);
					this.SendPropertyChanging();
					this._OgrenciID = value;
					this.SendPropertyChanged("OgrenciID");
					this.OnOgrenciIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KayitBaslangicTarihi", DbType="DateTime NOT NULL")]
		public System.DateTime KayitBaslangicTarihi
		{
			get
			{
				return this._KayitBaslangicTarihi;
			}
			set
			{
				if ((this._KayitBaslangicTarihi != value))
				{
					this.OnKayitBaslangicTarihiChanging(value);
					this.SendPropertyChanging();
					this._KayitBaslangicTarihi = value;
					this.SendPropertyChanged("KayitBaslangicTarihi");
					this.OnKayitBaslangicTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaksitSayisi", DbType="SmallInt NOT NULL")]
		public short TaksitSayisi
		{
			get
			{
				return this._TaksitSayisi;
			}
			set
			{
				if ((this._TaksitSayisi != value))
				{
					this.OnTaksitSayisiChanging(value);
					this.SendPropertyChanging();
					this._TaksitSayisi = value;
					this.SendPropertyChanged("TaksitSayisi");
					this.OnTaksitSayisiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KayitBitisTarihi", DbType="DateTime NOT NULL")]
		public System.DateTime KayitBitisTarihi
		{
			get
			{
				return this._KayitBitisTarihi;
			}
			set
			{
				if ((this._KayitBitisTarihi != value))
				{
					this.OnKayitBitisTarihiChanging(value);
					this.SendPropertyChanging();
					this._KayitBitisTarihi = value;
					this.SendPropertyChanged("KayitBitisTarihi");
					this.OnKayitBitisTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", DbType="Int NOT NULL")]
		public int PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yil", DbType="Int NOT NULL")]
		public int Yil
		{
			get
			{
				return this._Yil;
			}
			set
			{
				if ((this._Yil != value))
				{
					this.OnYilChanging(value);
					this.SendPropertyChanging();
					this._Yil = value;
					this.SendPropertyChanged("Yil");
					this.OnYilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToplamUcret", DbType="Float NOT NULL")]
		public double ToplamUcret
		{
			get
			{
				return this._ToplamUcret;
			}
			set
			{
				if ((this._ToplamUcret != value))
				{
					this.OnToplamUcretChanging(value);
					this.SendPropertyChanging();
					this._ToplamUcret = value;
					this.SendPropertyChanged("ToplamUcret");
					this.OnToplamUcretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ucret_Odeme", Storage="_Odemes", ThisKey="Id", OtherKey="UcretID")]
		public EntitySet<Odeme> Odemes
		{
			get
			{
				return this._Odemes;
			}
			set
			{
				this._Odemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ogrenci_Ucret", Storage="_Ogrenci", ThisKey="OgrenciID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Ogrenci Ogrenci
		{
			get
			{
				return this._Ogrenci.Entity;
			}
			set
			{
				Ogrenci previousValue = this._Ogrenci.Entity;
				if (((previousValue != value) 
							|| (this._Ogrenci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ogrenci.Entity = null;
						previousValue.Ucrets.Remove(this);
					}
					this._Ogrenci.Entity = value;
					if ((value != null))
					{
						value.Ucrets.Add(this);
						this._OgrenciID = value.Id;
					}
					else
					{
						this._OgrenciID = default(int);
					}
					this.SendPropertyChanged("Ogrenci");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Ucret", Storage="_Personel", ThisKey="PersonelID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Ucrets.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Ucrets.Add(this);
						this._PersonelID = value.Id;
					}
					else
					{
						this._PersonelID = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Odemes(Odeme entity)
		{
			this.SendPropertyChanging();
			entity.Ucret = this;
		}
		
		private void detach_Odemes(Odeme entity)
		{
			this.SendPropertyChanging();
			entity.Ucret = null;
		}
	}
}
#pragma warning restore 1591
